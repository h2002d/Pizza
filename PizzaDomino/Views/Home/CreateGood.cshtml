@model PizzaDomino.Models.Goods

@{
    ViewBag.Title = "CreateGood";
}

<h2>CreateGood</h2>
@using (Html.BeginForm("CreateGood", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="form-horizontal">
        <h4>Goods</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="form-control uploadEditorImage" />
                <input type="button" value="Upload" class="btn btn-default fileUploadAdditional" />
                @Html.TextBoxFor(model => model.ImageSource, new { @class = "image", @style = "display:none;" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId,
                                         new SelectList(ViewBag.Categories,
                                                   "Id", "Name"),
                                                    "--Select category--",
                                        new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}
@if (Model.Id != null)
{
    <div class="form-group">
        @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var ingredient in Model.Ingredients)
            {
                <div>
                    @ingredient.IngredientName <input type="button" id="@ingredient.IngredientId" value="Edit" class="ingredientEdit btn btn-info" /><input type="button" id="@ingredient.IngredientId" value="Delete" class="ingredientDelete btn btn-danger" />
                </div>
            }
        </div>
    </div>
    @Html.Action("CreateIngredient", new { goodId = Model.Id })

    <div class="form-group">
        @Html.LabelFor(model => model.Sizes, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @foreach (var size in Model.Sizes)
            {
                <div>
                    @size.Name <input type="button" id="@size.SizeId"  value="Edit" class="sizeEdit btn btn-info" /><input type="button" id="@size.SizeId" value="Delete" class="sizeDelete btn btn-danger" />
                </div>
            }
        </div>
    </div>
    @Html.Action("CreateSize", new { goodId = Model.Id })
}
<div class="createModule">
    <div class="row"><a onclick="closePopup()">X</a></div>
    <div align="center" id="createModule">
        Loading․․․
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
